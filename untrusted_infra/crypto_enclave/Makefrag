# Assumes: $(SM_DIR)
# Assumes: $(BUILD_DIR)
# Assumes: $(CRYPTO_ENCLAVE_SRC_DIR)
# Assumes: $(QUEUE_SRC_DIR)
# Assumes: $(CC)
# Assumes: $(CC-AR)
# Assumes: $(OBJCOPY)

CC-AR=riscv64-unknown-elf-gcc-ar

# NaCL Library
BUILD_NACL=$(BUILD_DIR)/libnacl

$(BUILD_NACL):
	@mkdir -p $@

LIB_MODULES=crypto_core/hsalsa20/opt crypto_core/salsa20/opt crypto_core/salsa208/opt crypto_core/salsa2012/opt crypto_box/curve25519xsalsa20poly1305 crypto_onetimeauth/poly1305/Radix2.26 crypto_onetimeauth/poly1305/Verify crypto_scalarmult/curve25519/Radix2.26 crypto_secretbox/xsalsa20poly1305 crypto_stream/salsa20 crypto_stream/salsa208 crypto_stream/salsa2012 crypto_stream/xsalsa20 crypto_verify/16 crypto_verify/32

LIB_MODULES_FULL_PATH=$(addprefix $(CRYPTO_ENCLAVE_SRC_DIR)/, $(LIB_MODULES))

LIB_SRCS_S=$(foreach subdir, $(LIB_MODULES_FULL_PATH), $(wildcard $(subdir)/*.S))
LIB_SRCS_C=$(foreach subdir, $(LIB_MODULES_FULL_PATH), $(wildcard $(subdir)/*.c)) 
LIB_SRCS= $(LIB_SRCS_C) $(LIB_SRCS_S)
LIB_OBJS=$(patsubst %.S, $(BUILD_NACL)/%.o,$(LIB_SRCS_S)) $(patsubst %.c, $(BUILD_NACL)/%.o, $(LIB_SRCS_C))

SRCS=$(wildcard *.c)
ASM=$(wildcard *.S)

OBJS_lose=$(SRCS:.c=.o) $(ASM:.S=.o)
OBJS=$(addprefix $(BUILD_NACL)/, $(OBJS_lose))

LIBNACL=$(BUILD_NACL)/libnacl.a

vpath %.c %.S $(LIB_SRCS)
$(LIBNACL): $(LIB_OBJS) 
	rm -f $(LIBNACL)
	$(CC-AR) --target=elf64-littleriscv -q $(LIBNACL) $(LIB_OBJS) 

$(BUILD_NACL)/%.o: %.c
	$(CC) -O3 -c $< -march=rv64g -o $@ 

$(BUILD_NACL)/%.o: %.S
	$(CC) -O3 -c $< -march=rv64g -o $@

# Enclave

CRYPTO_ENCLAVE_ELF := $(BUILD_DIR)/crytpo_enclave.elf
CRYPTO_ENCLAVE_BIN := $(BUILD_DIR)/crypto_enclave.bin

CRYPTO_ENCLAVE_INCLUDES := \
	$(PLATFORM_DIR) \
	$(API_DIR) \
	$(INFRA_DIR) \
	$(CRYPTO_ENCLAVE_SRC_DIR) \
	$(QUEUE_SRC_DIR) \

CRYPTO_ENCLAVE_SRC := \
	$(CRYPTO_ENCLAVE_SRC_DIR)/enclave_entry.S \
  $(CRYPTO_ENCLAVE_SRC_DIR)/enclave_code.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/enclave_stack.S \
  $(CRYPTO_ENCLAVE_SRC_DIR)/clib/memset.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/clib/memcpy.c \
  $(QUEUE_SRC_DIR)/msgq.c \

CRYPTO_ENCLAVE_LD := $(CRYPTO_ENCLAVE_SRC_DIR)/enclave.lds

$(CRYPTO_ENCLAVE_ELF): $(CRYPTO_ENCLAVE_SRC) $(CRYPTO_ENCLAVE_LD) $(BUILD_DIR) $(LIB_SRCS)
	$(CC) $(CFLAGS) $(addprefix -I , $(CRYPTO_ENCLAVE_INCLUDES)) $(LDFLAGS) -T $(CRYPTO_ENCLAVE_LD) $< $(CRYPTO_ENCLAVE_SRC) $(LIB_SRCS) -o $@

$(CRYPTO_ENCLAVE_BIN): $(CRYPTO_ENCLAVE_ELF)
	$(OBJCOPY) -O binary $< $@

.PHONY: crypto_enclave
crypto_enclave : $(CRYPTO_ENCLAVE_BIN)
