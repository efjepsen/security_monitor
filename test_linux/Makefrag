# Assumes: $(PYTHON)
# Assumes: $(BUILD_DIR)
# Assumes: $(PLATFORM_DIR)
# Assumes: $(API_DIR)
# Assumes: $(BUILD_DIR)
# Assumes: $(SM_DIR)
# Assumes: $(CC)
# Assumes: $(OBJCOPY)
# Assumes: $(SM_TEST_LINUX_DIR)

SM_TEST_CFLAGS := $(CFLAGS)

SM_TEST_LDFLAGS := $(LDFLAGS)

SM_TEST_LD :=  $(SM_TEST_LINUX_DIR)/test-linux.lds

NULL_BOOT_BINARY := $(BUILD_DIR)/null_boot.bin
NULL_BOOT_ELF := $(BUILD_DIR)/null_boot.elf

SM_BINARY := $(BUILD_DIR)/sm.bin

SM_TEST_INCLUDES := \
	$(COMMON_DIR) \
	$(PLATFORM_DIR) \
	$(API_DIR) \
	$(SM_TEST_LINUX_DIR) \

LINUX_ELF := $(SM_DIR)/../../build-riscv-linux/riscv-linux/vmlinux
LINUX_BIN := $(BUILD_DIR)/vmlinux.bin

$(LINUX_BIN): $(LINUX_ELF)
	$(LINUX_OBJCOPY) -O binary --set-section-flags .bss=alloc,load,contents $< $@

ALL_TESTS_SRC := \
	$(COMMON_DIR)/htif/htif.c \
	$(SM_TEST_DIR)/null_boot_loader/sm_keys.c \
	$(SM_TEST_DIR)/null_boot_loader/sm.S \
	$(PLATFORM_DIR)/idpt.S \

$(BUILD_DIR)/test_linux.elf: $(SM_TEST_LD) $(BUILD_DIR) $(SM_BINARY) $(ENCLAVE_BIN) $(IDPT_BIN) $(LINUX_BIN)
	$(CC) $(SM_CFLAGS) $(addprefix -I , \
	$(SM_TEST_INCLUDES)) \
	$(SM_TEST_LDFLAGS) \
	-T $(SM_TEST_LD) \
	$(ALL_TESTS_SRC) \
	$(SM_TEST_LINUX_DIR)/linux.S \
	-D IDPT_FILE=\"$(IDPT_BIN)\" \
	-D ENCLAVE_BINARY_FILE=\"$(ENCLAVE_BIN)\" \
	-D SM_BINARY_FILE=\"$(SM_BINARY)\" \
	-D LINUX_FILE=\"$(LINUX_BIN)\" \
	-o $@

.PHONY: test_linux
test_linux: $(BUILD_DIR)/test_linux.elf

.PHONY: run_test_linux
run_test_linux: $(BUILD_DIR)/test_linux.elf $(NULL_BOOT_BINARY)
	$(QEMU) $(QEMU_FLAGS) --kernel $(BUILD_DIR)/test_linux.elf --bios $(NULL_BOOT_BINARY)

.PHONY: debug_test_linux
debug_test_linux: $(BUILD_DIR)/test_linux.elf $(NULL_BOOT_BINARY)
	$(QEMU) $(QEMU_FLAGS) $(DEBUG_QEMU_FLAGS) --kernel $(BUILD_DIR)/test_linux.elf --bios $(NULL_BOOT_BINARY)
